// <auto-generated />
using System;
using LibraryBE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryBE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241013203220_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryBE.Models.Book", b =>
                {
                    b.Property<int>("id_Book")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Book"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("id_Book");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryBE.Models.Reservation", b =>
                {
                    b.Property<int>("id_Reservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Reservation"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<bool>("QuickPickup")
                        .HasColumnType("bit");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<int>("id_Book")
                        .HasColumnType("int");

                    b.Property<int>("id_User")
                        .HasColumnType("int");

                    b.HasKey("id_Reservation");

                    b.HasIndex("id_Book");

                    b.HasIndex("id_User");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("LibraryBE.Models.User", b =>
                {
                    b.Property<int>("id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_User"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LibraryBE.Models.Reservation", b =>
                {
                    b.HasOne("LibraryBE.Models.Book", "Book")
                        .WithMany("Reservations")
                        .HasForeignKey("id_Book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryBE.Models.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("id_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryBE.Models.Book", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("LibraryBE.Models.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
